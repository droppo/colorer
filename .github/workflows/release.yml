name: Release

on:
  push:
    tags:
      - v[0-9]+.*

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: taiki-e/create-gh-release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}

  upload-assets:
    name: Release
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        include:
        - build: linux
          os: ubuntu-latest
          rust: stable
          target: x86_64-unknown-linux-gnu
          cross: false
        - build: aarch64
          os: ubuntu-latest
          rust: stable
          target: aarch64-unknown-linux-gnu
          linker: gcc-aarch64-linux-gnu
          cross: true
        - build: macos
          os: macos-11
          rust: stable
          target: x86_64-apple-darwin
          cross: false
        - build: aarch64 macos
          os: macos-11
          rust: stable
          target: aarch64-apple-darwin
          cross: false
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
    - name: Install Linker
      if: matrix.cross
      run: |
        if [[ $(uname) == "Linux" ]]
        then
          sudo apt update
          sudo apt install ${{ matrix.linker }}
          mkdir .cargo
          echo '[target.aarch64-unknown-linux-gnu]' >> .cargo/config
          echo 'linker = "aarch64-linux-gnu-gcc"' >> .cargo/config
        fi
    - name: Install Rust
      run: |
        rustup install ${{ matrix.rust }}
        rustup target add ${{ matrix.target }}
        rustup show
    - name: Build
      run: cargo build --release --target ${{ matrix.target }}
    - name: Package Artifacts
      run: |
        src=$(pwd)
        stage=
        case $RUNNER_OS in
            Linux)
                stage=$(mktemp -d)
                ;;
            macOS)
                stage=$(mktemp -d -t tmp)
                ;;
        esac
        cp target/${{ matrix.target }}/release/clrr $stage/
        cd $stage
        RELEASE_VERSION=${GITHUB_REF#refs/tags/}
        ASSET_NAME="clrr-$RELEASE_VERSION-${{ matrix.target }}.tar.gz"
        ASSET_PATH="$src/$ASSET_NAME"
        echo "ASSET_PATH=$ASSET_PATH" >> $GITHUB_ENV
        tar czf $ASSET_PATH *
    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          ${{ env.ASSET_PATH }}
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
